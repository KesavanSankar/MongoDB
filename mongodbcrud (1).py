# -*- coding: utf-8 -*-
"""MongoDbCRUD

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MQrJsfAXAIDlSw-s1L-pI_yz470NYHz6
"""

from pymongo import MongoClient

Dbobj=MongoClient("mongodb://NIfnMKrLsGM4KIbf:NIfnMKrLsGM4KIbf@ac-pzzgpjn-shard-00-00.tjmiorw.mongodb.net:27017,ac-pzzgpjn-shard-00-01.tjmiorw.mongodb.net:27017,ac-pzzgpjn-shard-00-02.tjmiorw.mongodb.net:27017/?ssl=true&replicaSet=atlas-6qnxx7-shard-0&authSource=admin&retryWrites=true&w=majority")

Task=Dbobj["Task2"]

Telephoneobj=Task["Telephone"]

X={"name":"Kesavan","Phone Number":"1234567890","Place":"Madurai"}

Telephoneobj.insert_one(X)

A={"name":"Sara","Phone Number":"5434567890","Place":"Kovai"}
B={"name":"Lucky","Phone Number":"7834567890","Place":"London"}

Telephoneobj.insert_many([A,B])

Telephoneobj.update_one(A,"Place":"Chennai")

Telephoneobj.updateMany(
   { "Place": { "$eq": "Chennai" } },
   {
     "$set": { "name": "ASi", "Phone Number": "56655626524" }
     
   }
)

Telephoneobj.deleteOne( {"name": "ASi" } )

"""# Student """



from pymongo import MongoClient

Dbobj=MongoClient("mongodb://kesavan-DB:NIfnMKrLsGM4KIbf@ac-pzzgpjn-shard-00-00.tjmiorw.mongodb.net:27017,ac-pzzgpjn-shard-00-01.tjmiorw.mongodb.net:27017,ac-pzzgpjn-shard-00-02.tjmiorw.mongodb.net:27017/?ssl=true&replicaSet=atlas-6qnxx7-shard-0&authSource=admin&retryWrites=true&w=majority")

Task=Dbobj["Task2"]

studentobj=Task["student"]

import json

Data=open("/content/sample_data/students.json")

with open("/content/sample_data/students.json", 'r') as handle:
    json_data = [json.loads(line) for line in handle]

print(json_data)

studentobj.find()

import numpy as np

import pandas as pd

df=pd.DataFrame(json_data)
df

df_dir=df.to_dict("records")
df_dir

a=studentobj.find({"$and":[{"scores.score.type":"exam"}]})
for i in a:
  print(i)

2)

agg_result= studentobj.aggregate([
  {
    "$match": {
      "scores.score": {
        "$lte": 40
      },
      "scores.type": "exam"
    }
  },
  {
    "$project": {
      "name": "$name",
      "list": {
        "$filter": {
          "input": "$scores",
          "as": "list",
          "cond": {
            "$and": [
              {
                "$lt": [
                  "$$list.score",
                  40
                ]
              },
              {
                "$eq": [
                  "$$list.type",
                  "exam"
                ]
              }
            ]
          }
        }
      }
    }
  }
])
for i in agg_result:  
    print(i)

3)

agg_result= studentobj.aggregate([
   
      {
         "$project":
           {
             "name": 1,
             "result":
               {
                 "$cond": { "if": { "$gte": [ "scores.score", 40 ] }, "then": "pass", "else": "fail" }
               }
           }
      }
   ]
)
for i in agg_result:
  print(i)

"""1)"""

agg_result= studentobj.aggregate([
  {
    "$group": {
      "_id": "$_id",
      "scores": {
        "$first": "$scores"
      },
      "data": {
        "$push": "$$ROOT"
      }
    }
  },
  {
    "$unwind": "$data"
  },
  {
    "$match": {
      "data.scores.type": "exam"
    }
  },
  {
    "$sort": {
      "data.scores.score": -1
    }
  },
  {
    "$project": {
      "_id": 1,
      "name": "$data.name",
      "scores": "$scores"
    }
  },
  {
    "$limit": 1
  }
])
for i in agg_result:
    print(i)